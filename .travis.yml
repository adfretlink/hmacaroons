# NB: don't set `language: haskell` here
language: c

# See also https://github.com/hvr/multi-ghc-travis for more information

# explicitly request container-based infrastructure
sudo: false

# The following lines enable several GHC versions and/or HP versions
# to be tested; often it's enough to test only against the last
# release of a major GHC version. Setting HPVER implictly sets
# GHCVER. Omit lines with versions you don't need/want testing for.
matrix:
   include:
      - env: CABALVER=1.18 GHCVER=7.8.4
        addons: {apt: {packages: [cabal-install-1.18,ghc-7.8.4], sources: [hvr-ghc]}}
      - env: CABALVER=1.22 GHCVER=7.10.1
        addons: {apt: {packages: [cabal-install-1.22,ghc-7.10.1],sources: [hvr-ghc]}}
      - env: CABALVER=head GHCVER=head
        addons: {apt: {packages: [cabal-install-head,ghc-head], sources: [hvr-ghc]}}

   allow_failures:
      - env: CABALVER=head GHCVER=head

before_install:
   - export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$PATH

install:
 - cabal --version
 - echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
 - travis_retry cabal update
 - sed -i 's/^jobs:/-- jobs:/' ${HOME}/.cabal/config # The container environment reports 16 cores
 - cabal install hpc-coveralls
 - cabal install --only-dependencies

# Here starts the actual work to be performed for the package under
# test; any command which exits with a non-zero exit code causes the
# build to fail.
script:
 # -v2 provides useful information for debugging
   - cabal configure --enable-tests --enable-benchmarks --enable-coverage -v2

 # this builds all libraries and executables
 # (including tests/benchmarks)
 - cabal build

 - run-cabal-test --show-details=streaming
 - cabal check

 # tests that a source-distribution can be generated
 - cabal sdist

 # check that the generated source-distribution can be built & installed
 - SRC_TGZ=$(cabal info . | awk '{print $2;exit}').tar.gz &&
   (cd dist && cabal install --force-reinstalls "$SRC_TGZ")

after_script:
   - hpc-coveralls test
# EOF
